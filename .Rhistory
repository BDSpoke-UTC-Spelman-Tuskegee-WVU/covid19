ggtitle(cutoff_date)
us_states_current
us_states_current %>% filter(state=="New York")
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date) %>%
arrange(state, date)
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date) %>%
arrange(state, date) %>%
filter(state=="New York") %>%
# focal state
focal_state <- "New York"
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date) %>%
arrange(state, date) %>%
filter(state==focal_state) %>%
ggplot(aes(x=date, y=cases, group=state)) +
geom_point(aes(color=state)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
#  xlim(0, NA) +
#  ylim(0, 30000) +
ggtitle(cutoff_date)
# focal state
focal_state <- "New York"
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date) %>%
arrange(state, date) %>%
filter(state==focal_state) %>%
ggplot(aes(x=date, y=cases, group=state)) +
geom_point(aes(color=state)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
#  xlim(0, NA) +
#  ylim(0, 30000) +
ggtitle(cutoff_date)
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date) %>%
arrange(state, date) %>%
filter(state==focal_state)
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date) %>%
arrange(state, date) %>%
filter(state==focal_state) %>% arrange(desc(date))
# focal state
focal_states <- c("New York")
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date, state %in% focal_states) %>%
arrange(state, date) %>%
ggplot(aes(x=date, y=cases, group=state)) +
geom_point(aes(color=state)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
#  xlim(0, NA) +
#  ylim(0, 30000) +
ggtitle(cutoff_date)
# focal state
focal_states <- c("New York", "California", "Washington")
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date, state %in% focal_states) %>%
arrange(state, date) %>%
ggplot(aes(x=date, y=cases, group=state)) +
geom_point(aes(color=state)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
#  xlim(0, NA) +
#  ylim(0, 30000) +
ggtitle(cutoff_date)
us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
filter(date <= cutoff_date, state %in% focal_states) %>%
arrange(state, date) %>%
ggplot(aes(x=date, y=cases, group=state)) +
geom_point(aes(color=state)) +
geom_line(aes(color=state)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
#  xlim(0, NA) +
#  ylim(0, 30000) +
ggtitle(cutoff_date)
us_states
us_states %>% filter(state=="California")
us_states %>% filter(state=="California") %>% group_by(region) %>% summarize(cases=max(confirmed))
bay_area_counties <- c("San Francisco County", "Santa Clara County", "San Mateo County", "Marin County", "Contra Costa County", "Sonoma County", "Alameda County")
us_states %>% filter(state=="California", region %in% bay_area_counties) %>% group_by(region) %>% summarize(cases=max(confirmed))
bay_area_counties <- c("San Francisco County", "Santa Clara County", "San Mateo", "Marin", "Contra Costa County", "Sonoma County", "Alameda County")
us_states %>% filter(state=="California") %>% group_by(region) %>% summarize(cases=max(confirmed))
us_states %>% filter(state=="California", region %in% bay_area_counties) %>% group_by(region) %>% summarize(cases=max(confirmed))
us_states %>% filter(state=="California") %>% group_by(region) %>% summarize(cases=max(confirmed))
us_states %>% filter(state=="California") %>% group_by(region) %>% summarize(cases=max(confirmed)) %>% View()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(lubridate)
require(maps)
require(viridis)
library(ggthemes)
library(gganimate)
library(gifski)
require(usmap)
states_map <- map_data("state")
data_dir <- "COVID-19/csse_covid_19_data/csse_covid_19_time_series"
state_abbreviations <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC")
state_names <- c("Alabama", "Alaska", "Arizona", "Kansas",
"Utah", "Colorado", "Connecticut", "Delaware", "Florida",
"Georgia", "Hawaii", "Idaho", "Illinois", "Indiana",
"Iowa", "Arkansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota",
"Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York",
"North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
names(state_names) <- state_abbreviations
names(state_abbreviations) <- state_names
lag_countries <- c("China","Italy","Spain","US")
lag_days <- c(0, 33, 44, 44)
names(lag_days) <- lag_countries
by_country %>%
filter(confirmed > 0) %>%
group_by(country) %>%
mutate("day" = date - min(date)) %>%
ggplot(aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
xlim(0, 25) +
ylim(0, 30000) +
ggtitle(latest_date)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate("day" = date - min(date))
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(lubridate)
require(maps)
require(viridis)
library(ggthemes)
library(gganimate)
library(gifski)
require(usmap)
states_map <- map_data("state")
data_dir <- "COVID-19/csse_covid_19_data/csse_covid_19_time_series"
state_abbreviations <- c("AL", "AK", "AZ", "KS", "UT", "CO", "CT",
"DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "AR",
"KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO",
"MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND",
"OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX",
"CA", "VT", "VA", "WA", "WV", "WI", "WY", "DC")
state_names <- c("Alabama", "Alaska", "Arizona", "Kansas",
"Utah", "Colorado", "Connecticut", "Delaware", "Florida",
"Georgia", "Hawaii", "Idaho", "Illinois", "Indiana",
"Iowa", "Arkansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota",
"Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York",
"North Carolina", "North Dakota", "Ohio",
"Oklahoma", "Oregon", "Pennsylvania", "Rhode Island",
"South Carolina", "South Dakota", "Tennessee", "Texas",
"California", "Vermont", "Virginia", "Washington", "West Virginia",
"Wisconsin", "Wyoming", "District of Columbia")
names(state_names) <- state_abbreviations
names(state_abbreviations) <- state_names
lag_countries <- c("China","Italy","Spain","US")
lag_days <- c(0, 33, 44, 44)
names(lag_days) <- lag_countries
```{r data-load, echo=FALSE, warning=FALSE, message=FALSE}
# load and tidy the data
confirmed <- read_csv(paste0(data_dir, "/time_series_19-covid-Confirmed.csv")) %>%
pivot_longer(cols=c(-`Province/State`, -`Country/Region`, -Lat, -Long),
names_to="date",
values_to="cases") %>%
rename("country" = `Country/Region`, "state" = `Province/State`) %>%
mutate(date = as.Date(date, "%m/%d/%y")) %>%
rename("confirmed" = cases)
deaths <- read_csv(paste0(data_dir, "/time_series_19-covid-Deaths.csv")) %>%
pivot_longer(cols=c(-`Province/State`, -`Country/Region`, -Lat, -Long),
names_to="date",
values_to="cases") %>%
rename("country" = `Country/Region`, "state" = `Province/State`) %>%
mutate(date = as.Date(date, "%m/%d/%y")) %>%
rename("deaths" = cases)
recovered <- read_csv(paste0(data_dir, "/time_series_19-covid-Recovered.csv")) %>%
pivot_longer(cols=c(-`Province/State`, -`Country/Region`, -Lat, -Long),
names_to="date",
values_to="cases") %>%
rename("country" = `Country/Region`, "state" = `Province/State`) %>%
mutate(date = as.Date(date, "%m/%d/%y")) %>%
rename("recovered" = cases)
# join the variables
complete <- confirmed %>%
left_join(recovered) %>%
left_join(deaths)
by_region <- complete %>%
filter(country=="US") %>%
mutate(state = recode(state,
"Washington, D.C."="District of Columbia",
"Virgin Islands, U.S."="US Virgin Islands")) %>%
group_by(state, date) %>%
summarize(confirmed=sum(confirmed), recovered=sum(recovered), deaths=sum(deaths))
by_country <- complete %>%
group_by(country, date) %>%
summarize(confirmed=sum(confirmed), recovered=sum(recovered), deaths=sum(deaths))
by_region_cumulative <- by_region %>%
group_by(state) %>%
summarize(confirmed=sum(confirmed), recovered=sum(recovered), deaths=sum(deaths))
us_states <- by_region %>%
ungroup() %>%
separate(state, into=c("region", "st"), sep=",", fill="left", remove=FALSE) %>%
mutate(st=state_names[str_trim(st)], region=str_trim(region)) %>%
mutate(state=if_else(is.na(st), state, st)) %>%
select(-st)
us_states_current <- us_states %>%
group_by(state, date) %>%
summarize(cases=sum(confirmed)) %>%
arrange(state, date) %>%
slice(n())
latest_date <- complete %>%
filter(confirmed > 0 | recovered == 0 | deaths == 0) %>%
select(date) %>%
top_n(1, date) %>%
distinct() %>%
pull(date)
latest_date <- as.Date(latest_date)
cutoff_date <- today()
states_map %>%
left_join(
us_states_current %>%
mutate(fips = state_abbreviations[state],
region = tolower(state)) %>%
filter(!is.na(region)) %>%
select(region, cases)
) %>%
ggplot(aes(long, lat, group = group)) +
geom_polygon(aes(fill = cases), color = "white") +
scale_fill_viridis_c(option = "C") +
coord_fixed(1.3) +
ggtitle(latest_date)
us_states_current %>%
arrange(desc(cases)) %>%
ungroup() %>%
top_n(10, cases) %>%
ggplot(aes(x=reorder(state, cases), y=cases)) +
geom_bar(stat="identity", fill="steelblue") +
theme_minimal() +
coord_flip() +
xlab("state") +
ylab("cumulative cases") +
ggtitle(latest_date)
by_country %>%
filter(country=="Italy" | country=="US") %>%
mutate("day" = date - min(date),
"lag_date" = if_else(country=="Italy", date, date - days(11)),
"lag_days" = lag_date - min(date)) %>%
ggplot(aes(x=lag_days, y=confirmed, group=country)) +
geom_point(aes(color=country)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
xlim(20, NA) +
ggtitle(latest_date)
by_country %>%
filter(country %in% lag_countries) %>%
mutate("day" = date - min(date),
"lag_date" = date - lag_days[country],
"lag_days" = lag_date - min(date)) %>%
ggplot(aes(x=lag_days, y=confirmed, group=country)) +
geom_point(aes(color=country)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
xlim(0, 25) +
ylim(0, 30000) +
ggtitle(latest_date)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate("day" = date - min(date)) %>%
ggplot(aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest()
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = map(data, ~min(date)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = map(., data, ~min(date)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data, ~min(date)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data, min(date)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data, min(.$date)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data = ., min(.$date)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data, min(.$date), data=.))
by_country %>%
filter(confirmed >= 100)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data, min(.$date, na.rm=TRUE)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
nest() %>%
mutate(min_date = purrr::map(data, min(date, na.rm=TRUE)))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
#  nest() %>%
mutate(day = date - min(date))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date)) %>%
ggplot(aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date)) %>%
filter(country == "China")
by_country %>%
#  filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date)) %>%
filter(country == "China")
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date)) %>%
ggplot(aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date), maxday = max(day))
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date), maxday = max(day)) %>%
ggplot(aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
geom_text(data = subset(., day == max_days), aes(label = country,
colour = country,
x = day,
y = confirmed), hjust = -.1) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date), maxday = max(day)) %>%
{
ggplot(., aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
geom_text(data = subset(., day == max_days), aes(label = country,
colour = country,
x = day,
y = confirmed), hjust = -.1) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
}
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date), maxday = max(day)) %>%
{
ggplot(., aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
geom_text(data = subset(., day == maxday), aes(label = country,
colour = country,
x = day,
y = confirmed), hjust = -.1) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
}
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date), maxday = max(day)) %>%
{
ggplot(., aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
geom_text(data = subset(., day == maxday & maxday < 10), aes(label = country,
colour = country,
x = day,
y = confirmed), hjust = -.1) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
}
by_country %>%
filter(confirmed >= 100) %>%
group_by(country) %>%
mutate(day = date - min(date), maxday = max(day)) %>%
{
ggplot(., aes(x=day, y=confirmed, group=country)) +
geom_line(aes(color=country)) +
geom_text(data = subset(., day == maxday & maxday > 10), aes(label = country,
colour = country,
x = day,
y = confirmed), hjust = -.1) +
xlab("Day of pandemic") +
ylab("Confirmed cases") +
scale_y_log10() +
theme(legend.position = "none") +
ggtitle(latest_date)
}
library(readr)
dataset <- read_csv(NULL)
View(dataset)
read_csv(paste0(data_dir, "/time_series_19-covid-Confirmed.csv"))
read_csv(paste0(data_dir, "/time_series_19-covid-Confirmed.csv")) %>% View()
read_csv(paste0(data_dir, "/time_series_19-covid-Confirmed.csv")) %>%
pivot_longer(cols=c(-`Province/State`, -`Country/Region`, -Lat, -Long),
names_to="date",
values_to="cases")
class('1/22/20')
'1/24/20'-'1/22/20'
as.Date('1/24/20')-as.Date('1/22/20')
as.Date('1/24/20', "%m/%d/%y")-as.Date('1/22/20', "%m/%d/%y")
confirmed <- read_csv(paste0(data_dir, "/time_series_19-covid-Confirmed.csv")) %>%
pivot_longer(cols=c(-`Province/State`, -`Country/Region`, -Lat, -Long),
names_to="date",
values_to="cases") %>%
rename("country" = `Country/Region`, "state" = `Province/State`) %>%
mutate(date = as.Date(date, "%m/%d/%y")) %>%
rename("confirmed" = cases)
confirmed
deaths
# join the variables
complete <- confirmed %>%
left_join(recovered) %>%
left_join(deaths)
complete
complete
complete %>% filter(country=="US")
complete %>% filter(country=="US") %>% arrange(state)
